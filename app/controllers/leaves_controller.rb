class LeavesController < ApplicationController
  before_action :set_leave, only: [:show, :edit, :update, :destroy]

  # GET /leaves
  # GET /leaves.json
  def index
    @url = request.url
    if params[:recommended].to_i == 1
      @status = "recommended"
      @leaves = current_employee.leaves.where(approved: true)
    elsif params[:approved].to_i == 1
      @status = "approved"
      @leaves = current_employee.leaves.where(approved: true)
    else
      @status = ""
      @leaves = current_employee.leaves
    end
    respond_to do |format| 
      format.html 
      format.pdf do
        info = {
           :Title => "My "+@leaves.count.to_s+" #{@status.capitalize} leave(s) - RwarriMS",
           :Author => current_employee.names,
           :Subject => "Leaves - RwarriMS",
           :Keywords => "ruby pdf leaves rwarrims",
           :Creator => "RwarriMS",
           :Producer => "Prawn",
           :CreationDate => Time.now
          }
          pdf = Prawn::Document.new(info: info) do |pdf|
            pdf.image Rails.root.join("app/assets/images","rwarri-banner.png"), width: 600, position: -40
            pdf.font_size 20
            pdf.move_down 20
            pdf.text "My "+@leaves.count.to_s+" #{@status.capitalize} leave(s) - RwarriMS", style: :bold
            pdf.move_down 10
            pdf.font_size 12
            pdf.stroke_color "000000"
            @leaves.each do |leave|
              pdf.stroke do
                pdf.horizontal_rule
              end
              pdf.move_down 10
              pdf.text "<b>Reason #{leave.reason}", :inline_format => true
              pdf.text "<b>Category</b> #{helpers.getCategoryId leave.category}", :inline_format => true
              pdf.text "<b>By</b> #{leave.employee.names}", :inline_format => true
              pdf.text "<b>Start</b> #{leave.start.strftime("%r on %a %d %b %Y")} (#{helpers.time_ago_in_words(leave.start)} #{leave.start > DateTime.now ? "from now" : "ago"})", :inline_format => true
              pdf.text "<b>End</b> #{leave.end.strftime("%r on %a %d %b %Y")} (#{helpers.time_ago_in_words(leave.end)} #{leave.end > DateTime.now ? "from now" : "ago"})", :inline_format => true
              pdf.text "<b>Expected to be at workplace</b> #{leave.expected.strftime("%r on %a %d %b %Y")} (#{helpers.time_ago_in_words(leave.expected)} #{leave.expected > DateTime.now ? "from now" : "ago"})", :inline_format => true
              pdf.text "<b>Recommended</b> #{leave.recommended}", :inline_format => true
              if leave.recommended
                pdf.text "<b>Approved</b> #{leave.approved}", :inline_format => true
              end
            end
            pdf.move_down 10
            pdf.stroke do
              pdf.horizontal_rule
            end
            pdf.move_down 10
            pdf.font_size 12
            pdf.text "Generated <b>at #{DateTime.now.strftime("%r on %a %d %b %Y")}</b>", :inline_format => true
            pdf.text "Generated by <b>Uwizeye Belange</b>", :inline_format => true
            pdf.text "Generated by <color rgb='#0000ff'><u><link href='https://rwarrims-beta.herokuapp.com'>RwarriMS</link></u></color> - Rwarri Management System", :inline_format => true
            pdf.text "Content © Copyright <color rgb='#0000ff'><u><link href='https://rwarri.com'>RWARRI</link></u></color> - Rwanda Rural Rehabilitation Initiative", :inline_format => true

          end
          send_data pdf.render, type: "application/pdf", disposition: "inline"
      end
    end
  end

  # GET /leaves/1
  # GET /leaves/1.json
  def show
    @url = request.url
    respond_to do |format| 
      format.html 
      format.pdf do
        info = {
           :Title => "Leave - RwarriMS",
           :Author => current_employee.names,
           :Subject => "Leave - RwarriMS",
           :Keywords => "ruby pdf leaves rwarrims",
           :Creator => "RwarriMS",
           :Producer => "Prawn",
           :CreationDate => Time.now
          }
          pdf = Prawn::Document.new(info: info) do |pdf|
            pdf.image Rails.root.join("app/assets/images","rwarri-banner.png"), width: 600, position: -40
            pdf.font_size 20
            pdf.move_down 20
            pdf.text "Leave - RwarriMS", style: :bold
            pdf.move_down 10
            pdf.font_size 12
            pdf.stroke_color "000000"
            leave = @leave
              pdf.stroke do
                pdf.horizontal_rule
              end
              pdf.move_down 10
              pdf.text "<b>Reason #{leave.reason}", :inline_format => true
              pdf.text "<b>Category</b> #{helpers.getCategoryId leave.category}", :inline_format => true
              pdf.text "<b>By</b> #{leave.employee.names}", :inline_format => true
              pdf.text "<b>Start</b> #{leave.start.strftime("%r on %a %d %b %Y")} (#{helpers.time_ago_in_words(leave.start)} #{leave.start > DateTime.now ? "from now" : "ago"})", :inline_format => true
              pdf.text "<b>End</b> #{leave.end.strftime("%r on %a %d %b %Y")} (#{helpers.time_ago_in_words(leave.end)} #{leave.end > DateTime.now ? "from now" : "ago"})", :inline_format => true
              pdf.text "<b>Expected to be at workplace</b> #{leave.expected.strftime("%r on %a %d %b %Y")} (#{helpers.time_ago_in_words(leave.expected)} #{leave.expected > DateTime.now ? "from now" : "ago"})", :inline_format => true
              pdf.text "<b>Recommended</b> #{leave.recommended}", :inline_format => true
              if leave.recommended
                pdf.text "<b>Approved</b> #{leave.approved}", :inline_format => true
              end
            pdf.move_down 10
            pdf.stroke do
              pdf.horizontal_rule
            end
            pdf.move_down 10
            pdf.font_size 12
            pdf.text "Generated <b>at #{DateTime.now.strftime("%r on %a %d %b %Y")}</b>", :inline_format => true
            pdf.text "Generated by <b>Uwizeye Belange</b>", :inline_format => true
            pdf.text "Generated by <color rgb='#0000ff'><u><link href='https://rwarrims-beta.herokuapp.com'>RwarriMS</link></u></color> - Rwarri Management System", :inline_format => true
            pdf.text "Content © Copyright <color rgb='#0000ff'><u><link href='https://rwarri.com'>RWARRI</link></u></color> - Rwanda Rural Rehabilitation Initiative", :inline_format => true

          end
          send_data pdf.render, type: "application/pdf", disposition: "inline"
      end
    end
  end

  # GET /leaves/new
  def new
    @leave = Leave.new
  end

  # GET /leaves/1/edit
  def edit
  end

  # POST /leaves
  # POST /leaves.json
  def create
    @leave = current_employee.leaves.new(leave_params)
    @leave.recommended = false
    @leave.approved = false

    respond_to do |format|
      if @leave.save
        format.html { redirect_to @leave, notice: 'Leave was successfully created.' }
        format.json { render :show, status: :created, location: @leave }
      else
        format.html { render :new }
        format.json { render json: @leave.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /leaves/1
  # PATCH/PUT /leaves/1.json
  def update
    respond_to do |format|
      if @leave.update(leave_params)
        format.html { redirect_to @leave, notice: 'Leave was successfully updated.' }
        format.json { render :show, status: :ok, location: @leave }
      else
        format.html { render :edit }
        format.json { render json: @leave.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /leaves/1
  # DELETE /leaves/1.json
  def destroy
    @leave.destroy
    respond_to do |format|
      format.html { redirect_to leaves_url, notice: 'Leave was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_leave
      @leave = Leave.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def leave_params
      params.require(:leave).permit(:reason, :start, :end, :expected, :category)
    end
end
